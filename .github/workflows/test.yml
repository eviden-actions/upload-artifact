name: Validate

# Controls when the action will run.
on:
  # Allows you to call this workflow from other workflows
  workflow_call:

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  test:
    name: 'üß™ Test'
    runs-on: ubuntu-latest

    steps:
      - name: '‚òÅÔ∏è Checkout repository'
        uses: actions/checkout@v5
        with:
          ref: ${{ github.event.pull_request.head.sha }}
          persist-credentials: false

      - name: '‚öôÔ∏è Use Node.js'
        uses: actions/setup-node@v5
        with:
          node-version-file: '.nvmrc'
          check-latest: true
          cache: 'npm'

      - name: '‚õìÔ∏è Install dependencies'
        run: npm ci --no-optional --no-audit --prefer-offline --progress=false

      - name: '‚úÖ Test files'
        uses: ./
        with:
          name: artifact
          path: |
            README.md
            LICENSE
          retention-days: 5

      - name: '‚úÖ Test files do not exist'
        uses: ./
        with:
          name: 'no_artifact'
          path: |
            dist/
            packages/**/dist/
          retention-days: 5

      - name: '‚úÖ Test partial'
        uses: ./
        with:
          name: 'partial_artifact'
          path: |
            dist/
            README.md
          retention-days: 5

      - name: '‚úÖ Test exclusion (exclude LICENSE)'
        uses: ./
        with:
          name: 'artifact_exclude_license'
          path: |
            README.md
            LICENSE
            !LICENSE
          retention-days: 5

      - name: '‚¨áÔ∏è Download exclusion (exclude LICENSE)'
        uses: actions/download-artifact@v4
        with:
          name: artifact_exclude_license
          path: .

      - name: 'üîç Verify exclusion (exclude LICENSE)'
        shell: bash
        run: |
          echo 'Listing contents of artifact_exclude_license.tar'
          tar -tf artifact_exclude_license.tar || (echo 'Tar list failed' && exit 1)
          contents=$(tar -tf artifact_exclude_license.tar)
          echo "Contents: $contents"
          if echo "$contents" | grep -q 'LICENSE'; then
            echo 'ERROR: LICENSE was found but should have been excluded'
            exit 1
          fi
          if ! echo "$contents" | grep -q 'README.md'; then
            echo 'ERROR: README.md not found (should be included)'
            exit 1
          fi
          echo 'Exclusion test (LICENSE) passed.'

      - name: '‚úÖ Test exclusion (exclude *.md)'
        uses: ./
        with:
          name: 'artifact_exclude_markdown'
          path: |
            README.md
            LICENSE
            !*.md
          retention-days: 5

      - name: '‚¨áÔ∏è Download exclusion (exclude *.md)'
        uses: actions/download-artifact@v4
        with:
          name: artifact_exclude_markdown
          path: .

      - name: 'üîç Verify exclusion (exclude *.md)'
        shell: bash
        run: |
          echo 'Listing contents of artifact_exclude_markdown.tar'
          tar -tf artifact_exclude_markdown.tar || (echo 'Tar list failed' && exit 1)
          contents=$(tar -tf artifact_exclude_markdown.tar)
          echo "Contents: $contents"
          if echo "$contents" | grep -q 'README.md'; then
            echo 'ERROR: README.md was found but should have been excluded by pattern !*.md'
            exit 1
          fi
          if ! echo "$contents" | grep -q 'LICENSE'; then
            echo 'ERROR: LICENSE not found (should be included)'
            exit 1
          fi
          echo 'Exclusion test (*.md) passed.'

      - name: 'üßπ Cleanup workspace'
        uses: eviden-actions/clean-self-hosted-runner@v1
